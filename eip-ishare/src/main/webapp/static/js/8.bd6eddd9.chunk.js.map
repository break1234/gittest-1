{"version":3,"sources":["../node_modules/lodash/_baseExtremum.js","../node_modules/@nivo/heatmap/index.js","../node_modules/@nivo/heatmap/cjs/nivo-heatmap.js","../node_modules/lodash/min.js","../node_modules/lodash/_baseLt.js","../node_modules/lodash/max.js","../node_modules/lodash/_baseGt.js","../node_modules/lodash/partial.js"],"names":["isSymbol","__webpack_require__","module","exports","array","iteratee","comparator","index","length","value","current","undefined","computed","result","global","_interopDefault","ex","Object","defineProperty","PropTypes","core","axes","min","max","isEqual","compose","defaultProps","withPropsOnChange","withState","pure","d3Scale","React","React__default","partial","reactMotion","setDisplayName","HeatMapPropTypes","data","arrayOf","object","isRequired","indexBy","oneOfType","string","func","getIndex","keys","minValue","oneOf","number","maxValue","forceSquare","bool","sizeVariation","padding","cellShape","cellOpacity","cellBorderWidth","cellBorderColor","getCellBorderColor","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","enableGridY","enableLabels","labelTextColor","getLabelTextColor","colors","quantizeColorScalePropType","colorScale","nanColor","isInteractive","onClick","hoverTarget","cellHoverOpacity","cellHoverOthersOpacity","tooltipFormat","tooltip","pixelRatio","HeatMapDefaultProps","noop","window","devicePixelRatio","isHoverTargetByType","cell","node","xKey","yKey","row","column","rowColumn","computeNodes","_ref","xScale","yScale","sizeScale","cellWidth","cellHeight","currentNode","isHoverTarget","reduce","acc","d","forEach","key","width","Math","height","x","y","color","isNaN","opacity","push","assign","enhance","Component","withTheme","withDimensions","withMotion","guessQuantizeColorScale","_ref2","getAccessorFor","_ref3","columns","rows","offsetX","offsetY","cellSize","_ref4","indices","map","prev","next","_ref5","scaleOrdinal","i","computeX","domain","computeY","_ref6","allValues","concat","_ref7","_ref8","scaleLinear","range","_ref9","getInheritedColorGenerator","_ref10","classCallCheck","instance","Constructor","TypeError","_extends","target","arguments","source","prototype","hasOwnProperty","call","inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","style","cursor","HeatMapCellRect","borderWidth","borderColor","enableLabel","textColor","onHover","onLeave","_onClick","theme","createElement","transform","onMouseEnter","onMouseMove","onMouseLeave","e","fill","fillOpacity","strokeWidth","stroke","strokeOpacity","alignmentBaseline","textAnchor","labels","text","propTypes","themePropType","HeatMapCellRect$1","style$1","HeatMapCellCircle","r","HeatMapCellCircle$1","HeatMapCellTooltip","format","BasicTooltip","id","enableChip","renderContent","bind","shape","container","basic","HeatMapCellTooltip$1","HeatMap","_Component","_temp","_this","this","_len","args","Array","_key","apply","handleNodeHover","showTooltip","event","_this$props","props","setCurrentNode","handleNodeLeave","hideTooltip","render","_this2","_props","margin","outerWidth","outerHeight","animate","motionStiffness","motionDamping","boundSpring","Cell","nodes","motionProps","Container","SvgWrapper","top","left","Grid","Axes","right","bottom","TransitionMotion","styles","colorMotionSpring","damping","stiffness","interpolatedStyles","getInterpolatedColor","HeatMap$1","renderRect","ctx","save","globalAlpha","fillStyle","fillRect","fillText","restore","renderCircle","radius","beginPath","arc","PI","HeatMapCanvas","handleMouseHover","_getRelativeCursor","getRelativeCursor","surface","find","isCursorInRect","handleMouseLeave","handleClick","componentDidMount","getContext","draw","shouldComponentUpdate","componentDidUpdate","scale","renderNode","background","translate","renderAxesToCanvas","textAlign","textBaseline","ref","HeatMapCanvas$1","ResponsiveHeatMap","ResponsiveWrapper","ResponsiveHeatMapCanvas","baseExtremum","baseLt","identity","other","baseGt","baseRest","createWrap","getHolder","replaceHolders","partials","holders","placeholder"],"mappings":"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","file":"static/js/8.bd6eddd9.chunk.js","sourcesContent":["var isSymbol = require('./isSymbol');\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\n\n\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {\n      var computed = current,\n          result = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseExtremum;","module.exports = require('./cjs/nivo-heatmap');","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar core = require('@nivo/core');\n\nvar axes = require('@nivo/axes');\n\nvar min = _interopDefault(require('lodash/min'));\n\nvar max = _interopDefault(require('lodash/max'));\n\nvar isEqual = _interopDefault(require('lodash/isEqual'));\n\nvar compose = _interopDefault(require('recompose/compose'));\n\nvar defaultProps = _interopDefault(require('recompose/defaultProps'));\n\nvar withPropsOnChange = _interopDefault(require('recompose/withPropsOnChange'));\n\nvar withState = _interopDefault(require('recompose/withState'));\n\nvar pure = _interopDefault(require('recompose/pure'));\n\nvar d3Scale = require('d3-scale');\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar partial = _interopDefault(require('lodash/partial'));\n\nvar reactMotion = require('react-motion');\n\nvar setDisplayName = _interopDefault(require('recompose/setDisplayName'));\n\nvar HeatMapPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  indexBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getIndex: PropTypes.func.isRequired,\n  // computed\n  keys: PropTypes.arrayOf(PropTypes.string).isRequired,\n  minValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  maxValue: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  forceSquare: PropTypes.bool.isRequired,\n  sizeVariation: PropTypes.number.isRequired,\n  padding: PropTypes.number.isRequired,\n  cellShape: PropTypes.oneOfType([PropTypes.oneOf(['rect', 'circle']), PropTypes.func]).isRequired,\n  cellOpacity: PropTypes.number.isRequired,\n  cellBorderWidth: PropTypes.number.isRequired,\n  cellBorderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getCellBorderColor: PropTypes.func.isRequired,\n  // computed\n  axisTop: axes.axisPropType,\n  axisRight: axes.axisPropType,\n  axisBottom: axes.axisPropType,\n  axisLeft: axes.axisPropType,\n  enableGridX: PropTypes.bool.isRequired,\n  enableGridY: PropTypes.bool.isRequired,\n  enableLabels: PropTypes.bool.isRequired,\n  labelTextColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getLabelTextColor: PropTypes.func.isRequired,\n  // computed\n  colors: core.quantizeColorScalePropType.isRequired,\n  colorScale: PropTypes.func.isRequired,\n  // computed\n  nanColor: PropTypes.string,\n  isInteractive: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  hoverTarget: PropTypes.oneOf(['cell', 'row', 'column', 'rowColumn']).isRequired,\n  cellHoverOpacity: PropTypes.number.isRequired,\n  cellHoverOthersOpacity: PropTypes.number.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  tooltip: PropTypes.func,\n  pixelRatio: PropTypes.number.isRequired\n};\nvar HeatMapDefaultProps = {\n  indexBy: 'id',\n  minValue: 'auto',\n  maxValue: 'auto',\n  forceSquare: false,\n  sizeVariation: 0,\n  padding: 0,\n  // cells\n  cellShape: 'rect',\n  cellOpacity: 0.85,\n  cellBorderWidth: 0,\n  cellBorderColor: 'inherit',\n  // axes & grid\n  axisTop: {},\n  axisLeft: {},\n  enableGridX: false,\n  enableGridY: false,\n  // labels\n  enableLabels: true,\n  labelTextColor: 'inherit:darker(1.4)',\n  // theming\n  colors: 'nivo',\n  nanColor: '#000000',\n  // interactivity\n  isInteractive: true,\n  onClick: core.noop,\n  hoverTarget: 'rowColumn',\n  cellHoverOpacity: 1,\n  cellHoverOthersOpacity: 0.35,\n  // canvas specific\n  pixelRatio: global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1\n};\nvar isHoverTargetByType = {\n  cell: function cell(node, current) {\n    return node.xKey === current.xKey && node.yKey === current.yKey;\n  },\n  row: function row(node, current) {\n    return node.yKey === current.yKey;\n  },\n  column: function column(node, current) {\n    return node.xKey === current.xKey;\n  },\n  rowColumn: function rowColumn(node, current) {\n    return node.xKey === current.xKey || node.yKey === current.yKey;\n  }\n};\n\nvar computeNodes = function computeNodes(_ref) {\n  var data = _ref.data,\n      keys = _ref.keys,\n      getIndex = _ref.getIndex,\n      xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      sizeScale = _ref.sizeScale,\n      cellOpacity = _ref.cellOpacity,\n      cellWidth = _ref.cellWidth,\n      cellHeight = _ref.cellHeight,\n      colorScale = _ref.colorScale,\n      nanColor = _ref.nanColor,\n      getLabelTextColor = _ref.getLabelTextColor,\n      currentNode = _ref.currentNode,\n      hoverTarget = _ref.hoverTarget,\n      cellHoverOpacity = _ref.cellHoverOpacity,\n      cellHoverOthersOpacity = _ref.cellHoverOthersOpacity;\n  var isHoverTarget = isHoverTargetByType[hoverTarget];\n  return data.reduce(function (acc, d) {\n    keys.forEach(function (key) {\n      var width = sizeScale ? Math.min(sizeScale(d[key]) * cellWidth, cellWidth) : cellWidth;\n      var height = sizeScale ? Math.min(sizeScale(d[key]) * cellHeight, cellHeight) : cellHeight;\n      var node = {\n        key: key + \".\" + getIndex(d),\n        xKey: key,\n        yKey: getIndex(d),\n        x: xScale(key),\n        y: yScale(getIndex(d)),\n        width: width,\n        height: height,\n        value: d[key],\n        color: isNaN(d[key]) ? nanColor : colorScale(d[key])\n      };\n      var opacity = cellOpacity;\n\n      if (currentNode) {\n        opacity = isHoverTarget(node, currentNode) ? cellHoverOpacity : cellHoverOthersOpacity;\n      }\n\n      acc.push(Object.assign(node, {\n        labelTextColor: getLabelTextColor(node),\n        opacity: opacity\n      }));\n    });\n    return acc;\n  }, []);\n};\n\nvar computeX = function computeX(column, cellWidth, padding) {\n  return column * cellWidth + cellWidth * 0.5 + padding * column + padding;\n};\n\nvar computeY = function computeY(row, cellHeight, padding) {\n  return row * cellHeight + cellHeight * 0.5 + padding * row + padding;\n};\n\nvar enhance = function enhance(Component) {\n  return compose(defaultProps(HeatMapDefaultProps), withState('currentNode', 'setCurrentNode', null), core.withTheme(), core.withDimensions(), core.withMotion(), withPropsOnChange(['colors'], function (_ref) {\n    var colors = _ref.colors;\n    return {\n      colorScale: core.guessQuantizeColorScale(colors)\n    };\n  }), withPropsOnChange(['indexBy'], function (_ref2) {\n    var indexBy = _ref2.indexBy;\n    return {\n      getIndex: core.getAccessorFor(indexBy)\n    };\n  }), withPropsOnChange(['data', 'keys', 'width', 'height', 'padding', 'forceSquare'], function (_ref3) {\n    var data = _ref3.data,\n        keys = _ref3.keys,\n        width = _ref3.width,\n        height = _ref3.height,\n        padding = _ref3.padding,\n        forceSquare = _ref3.forceSquare;\n    var columns = keys.length;\n    var rows = data.length;\n    var cellWidth = Math.max((width - padding * (columns + 1)) / columns, 0);\n    var cellHeight = Math.max((height - padding * (rows + 1)) / rows, 0);\n    var offsetX = 0;\n    var offsetY = 0;\n\n    if (forceSquare === true) {\n      var cellSize = Math.min(cellWidth, cellHeight);\n      cellWidth = cellSize;\n      cellHeight = cellSize;\n      offsetX = (width - ((cellWidth + padding) * columns + padding)) / 2;\n      offsetY = (height - ((cellHeight + padding) * rows + padding)) / 2;\n    }\n\n    return {\n      cellWidth: cellWidth,\n      cellHeight: cellHeight,\n      offsetX: offsetX,\n      offsetY: offsetY\n    };\n  }), withPropsOnChange(['data', 'getIndex'], function (_ref4) {\n    var data = _ref4.data,\n        getIndex = _ref4.getIndex;\n    return {\n      indices: data.map(getIndex)\n    };\n  }), withPropsOnChange(function (prev, next) {\n    return prev.keys !== next.keys || prev.cellWidth !== next.cellWidth || prev.cellHeight !== next.cellHeight || prev.padding !== next.padding || !isEqual(prev.indices, next.indices);\n  }, function (_ref5) {\n    var indices = _ref5.indices,\n        keys = _ref5.keys,\n        cellWidth = _ref5.cellWidth,\n        cellHeight = _ref5.cellHeight,\n        padding = _ref5.padding;\n    return {\n      xScale: d3Scale.scaleOrdinal(keys.map(function (key, i) {\n        return computeX(i, cellWidth, padding);\n      })).domain(keys),\n      yScale: d3Scale.scaleOrdinal(indices.map(function (d, i) {\n        return computeY(i, cellHeight, padding);\n      })).domain(indices)\n    };\n  }), withPropsOnChange(['data', 'keys', 'minValue', 'maxValue'], function (_ref6) {\n    var data = _ref6.data,\n        keys = _ref6.keys,\n        _minValue = _ref6.minValue,\n        _maxValue = _ref6.maxValue;\n    var minValue = _minValue;\n    var maxValue = _maxValue;\n\n    if (minValue === 'auto' || maxValue === 'auto') {\n      var allValues = data.reduce(function (acc, row) {\n        return acc.concat(keys.map(function (key) {\n          return row[key];\n        }));\n      }, []);\n      if (minValue === 'auto') minValue = min(allValues);\n      if (maxValue === 'auto') maxValue = max(allValues);\n    }\n\n    return {\n      minValue: Math.min(minValue, maxValue),\n      maxValue: Math.max(maxValue, minValue)\n    };\n  }), withPropsOnChange(['colorScale', 'minValue', 'maxValue'], function (_ref7) {\n    var colorScale = _ref7.colorScale,\n        minValue = _ref7.minValue,\n        maxValue = _ref7.maxValue;\n    return {\n      colorScale: colorScale.domain([minValue, maxValue])\n    };\n  }), withPropsOnChange(['sizeVariation', 'minValue', 'maxValue'], function (_ref8) {\n    var sizeVariation = _ref8.sizeVariation,\n        minValue = _ref8.minValue,\n        maxValue = _ref8.maxValue;\n    var sizeScale = void 0;\n\n    if (sizeVariation > 0) {\n      sizeScale = d3Scale.scaleLinear().range([1 - sizeVariation, 1]).domain([minValue, maxValue]);\n    }\n\n    return {\n      sizeScale: sizeScale\n    };\n  }), withPropsOnChange(['cellBorderColor'], function (_ref9) {\n    var cellBorderColor = _ref9.cellBorderColor;\n    return {\n      getCellBorderColor: core.getInheritedColorGenerator(cellBorderColor)\n    };\n  }), withPropsOnChange(['labelTextColor'], function (_ref10) {\n    var labelTextColor = _ref10.labelTextColor;\n    return {\n      getLabelTextColor: core.getInheritedColorGenerator(labelTextColor)\n    };\n  }), pure)(Component);\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar style = {\n  cursor: 'pointer'\n};\n\nvar HeatMapCellRect = function HeatMapCellRect(_ref) {\n  var data = _ref.data,\n      value = _ref.value,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      color = _ref.color,\n      opacity = _ref.opacity,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      enableLabel = _ref.enableLabel,\n      textColor = _ref.textColor,\n      onHover = _ref.onHover,\n      onLeave = _ref.onLeave,\n      _onClick = _ref.onClick,\n      theme = _ref.theme;\n  return React__default.createElement('g', {\n    transform: 'translate(' + x + ', ' + y + ')',\n    onMouseEnter: onHover,\n    onMouseMove: onHover,\n    onMouseLeave: onLeave,\n    onClick: function onClick(e) {\n      _onClick(data, e);\n    },\n    style: style\n  }, React__default.createElement('rect', {\n    x: width * -0.5,\n    y: height * -0.5,\n    width: width,\n    height: height,\n    fill: color,\n    fillOpacity: opacity,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    strokeOpacity: opacity\n  }), enableLabel && React__default.createElement('text', {\n    alignmentBaseline: 'central',\n    textAnchor: 'middle',\n    style: _extends({}, theme.labels.text, {\n      fill: textColor\n    }),\n    fillOpacity: opacity\n  }, value));\n};\n\nHeatMapCellRect.propTypes = {\n  data: PropTypes.object.isRequired,\n  value: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  opacity: PropTypes.number.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.string.isRequired,\n  enableLabel: PropTypes.bool.isRequired,\n  textColor: PropTypes.string.isRequired,\n  onHover: PropTypes.func.isRequired,\n  onLeave: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  theme: core.themePropType.isRequired\n};\nvar HeatMapCellRect$1 = pure(HeatMapCellRect);\nvar style$1 = {\n  cursor: 'pointer'\n};\n\nvar HeatMapCellCircle = function HeatMapCellCircle(_ref) {\n  var data = _ref.data,\n      value = _ref.value,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      color = _ref.color,\n      opacity = _ref.opacity,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      enableLabel = _ref.enableLabel,\n      textColor = _ref.textColor,\n      onHover = _ref.onHover,\n      onLeave = _ref.onLeave,\n      _onClick = _ref.onClick,\n      theme = _ref.theme;\n  return React__default.createElement('g', {\n    transform: 'translate(' + x + ', ' + y + ')',\n    style: style$1,\n    onMouseEnter: onHover,\n    onMouseMove: onHover,\n    onMouseLeave: onLeave,\n    onClick: function onClick(e) {\n      _onClick(data, e);\n    }\n  }, React__default.createElement('circle', {\n    r: Math.min(width, height) / 2,\n    fill: color,\n    fillOpacity: opacity,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    strokeOpacity: opacity\n  }), enableLabel && React__default.createElement('text', {\n    alignmentBaseline: 'central',\n    textAnchor: 'middle',\n    style: _extends({}, theme.labels, {\n      fill: textColor\n    }),\n    fillOpacity: opacity\n  }, value));\n};\n\nHeatMapCellCircle.propTypes = {\n  data: PropTypes.object.isRequired,\n  value: PropTypes.number.isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  opacity: PropTypes.number.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.string.isRequired,\n  enableLabel: PropTypes.bool.isRequired,\n  textColor: PropTypes.string.isRequired,\n  onHover: PropTypes.func.isRequired,\n  onLeave: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  theme: core.themePropType.isRequired\n};\nvar HeatMapCellCircle$1 = pure(HeatMapCellCircle);\n\nvar HeatMapCellTooltip = function HeatMapCellTooltip(_ref) {\n  var node = _ref.node,\n      theme = _ref.theme,\n      format = _ref.format,\n      tooltip = _ref.tooltip;\n  return React__default.createElement(core.BasicTooltip, {\n    id: node.yKey + ' - ' + node.xKey,\n    value: node.value,\n    enableChip: true,\n    color: node.color,\n    theme: theme,\n    format: format,\n    renderContent: typeof tooltip === 'function' ? tooltip.bind(null, _extends({}, node)) : null\n  });\n};\n\nHeatMapCellTooltip.propTypes = {\n  node: PropTypes.shape({\n    xKey: PropTypes.string.isRequired,\n    yKey: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired\n  }).isRequired,\n  format: PropTypes.func,\n  tooltip: PropTypes.func,\n  theme: PropTypes.shape({\n    tooltip: PropTypes.shape({\n      container: PropTypes.object.isRequired,\n      basic: PropTypes.object.isRequired\n    }).isRequired\n  }).isRequired\n};\nvar HeatMapCellTooltip$1 = pure(HeatMapCellTooltip);\n\nvar HeatMap = function (_Component) {\n  inherits(HeatMap, _Component);\n\n  function HeatMap() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, HeatMap);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleNodeHover = function (showTooltip, node, event) {\n      var _this$props = _this.props,\n          setCurrentNode = _this$props.setCurrentNode,\n          theme = _this$props.theme,\n          tooltipFormat = _this$props.tooltipFormat,\n          tooltip = _this$props.tooltip;\n      setCurrentNode(node);\n      showTooltip(React__default.createElement(HeatMapCellTooltip$1, {\n        node: node,\n        theme: theme,\n        format: tooltipFormat,\n        tooltip: tooltip\n      }), event);\n    }, _this.handleNodeLeave = function (hideTooltip) {\n      _this.props.setCurrentNode(null);\n\n      hideTooltip();\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  HeatMap.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        xScale = _props.xScale,\n        yScale = _props.yScale,\n        offsetX = _props.offsetX,\n        offsetY = _props.offsetY,\n        margin = _props.margin,\n        width = _props.width,\n        height = _props.height,\n        outerWidth = _props.outerWidth,\n        outerHeight = _props.outerHeight,\n        cellShape = _props.cellShape,\n        cellBorderWidth = _props.cellBorderWidth,\n        getCellBorderColor = _props.getCellBorderColor,\n        axisTop = _props.axisTop,\n        axisRight = _props.axisRight,\n        axisBottom = _props.axisBottom,\n        axisLeft = _props.axisLeft,\n        enableGridX = _props.enableGridX,\n        enableGridY = _props.enableGridY,\n        enableLabels = _props.enableLabels,\n        getLabelTextColor = _props.getLabelTextColor,\n        theme = _props.theme,\n        animate = _props.animate,\n        motionStiffness = _props.motionStiffness,\n        motionDamping = _props.motionDamping,\n        boundSpring = _props.boundSpring,\n        isInteractive = _props.isInteractive,\n        onClick = _props.onClick;\n    var Cell = void 0;\n\n    if (cellShape === 'rect') {\n      Cell = HeatMapCellRect$1;\n    } else if (cellShape === 'circle') {\n      Cell = HeatMapCellCircle$1;\n    } else {\n      Cell = cellShape;\n    }\n\n    var nodes = computeNodes(this.props);\n    var motionProps = {\n      animate: animate,\n      motionDamping: motionDamping,\n      motionStiffness: motionStiffness\n    };\n    return React__default.createElement(core.Container, {\n      isInteractive: isInteractive,\n      theme: theme\n    }, function (_ref) {\n      var showTooltip = _ref.showTooltip,\n          hideTooltip = _ref.hideTooltip;\n      var onHover = partial(_this2.handleNodeHover, showTooltip);\n      var onLeave = partial(_this2.handleNodeLeave, hideTooltip);\n      return React__default.createElement(core.SvgWrapper, {\n        width: outerWidth,\n        height: outerHeight,\n        margin: Object.assign({}, margin, {\n          top: margin.top + offsetY,\n          left: margin.left + offsetX\n        }),\n        theme: theme\n      }, React__default.createElement(core.Grid, _extends({\n        theme: theme,\n        width: width - offsetX * 2,\n        height: height - offsetY * 2,\n        xScale: enableGridX ? xScale : null,\n        yScale: enableGridY ? yScale : null\n      }, motionProps)), React__default.createElement(axes.Axes, _extends({\n        xScale: xScale,\n        yScale: yScale,\n        width: width,\n        height: height,\n        theme: theme,\n        top: axisTop,\n        right: axisRight,\n        bottom: axisBottom,\n        left: axisLeft\n      }, motionProps)), !animate && nodes.map(function (node) {\n        return React__default.createElement(Cell, {\n          key: node.key,\n          data: node,\n          value: node.value,\n          x: node.x,\n          y: node.y,\n          width: node.width,\n          height: node.height,\n          color: node.color,\n          opacity: node.opacity,\n          borderWidth: cellBorderWidth,\n          borderColor: getCellBorderColor(node),\n          enableLabel: enableLabels,\n          textColor: getLabelTextColor(node),\n          onHover: partial(onHover, node),\n          onLeave: onLeave,\n          onClick: onClick,\n          theme: theme\n        });\n      }), animate === true && React__default.createElement(reactMotion.TransitionMotion, {\n        styles: nodes.map(function (node) {\n          return {\n            key: node.key,\n            data: node,\n            style: _extends({\n              x: boundSpring(node.x),\n              y: boundSpring(node.y),\n              width: boundSpring(node.width),\n              height: boundSpring(node.height),\n              opacity: boundSpring(node.opacity)\n            }, core.colorMotionSpring(node.color, {\n              damping: motionDamping,\n              stiffness: motionStiffness\n            }))\n          };\n        })\n      }, function (interpolatedStyles) {\n        return React__default.createElement('g', null, interpolatedStyles.map(function (_ref2) {\n          var key = _ref2.key,\n              style = _ref2.style,\n              node = _ref2.data;\n          var color = core.getInterpolatedColor(style);\n          return React__default.createElement(Cell, {\n            key: key,\n            data: node,\n            value: node.value,\n            x: style.x,\n            y: style.y,\n            width: Math.max(style.width, 0),\n            height: Math.max(style.height, 0),\n            color: color,\n            opacity: style.opacity,\n            borderWidth: cellBorderWidth,\n            borderColor: getCellBorderColor(_extends({}, node, {\n              color: color\n            })),\n            enableLabel: enableLabels,\n            textColor: getLabelTextColor(_extends({}, node, {\n              color: color\n            })),\n            onHover: partial(onHover, node),\n            onLeave: onLeave,\n            onClick: onClick,\n            theme: theme\n          });\n        }));\n      }));\n    });\n  };\n\n  return HeatMap;\n}(React.Component);\n\nHeatMap.propTypes = HeatMapPropTypes;\nvar HeatMap$1 = setDisplayName('HeatMap')(enhance(HeatMap));\n/**\n * Render heatmap rect cell.\n *\n * @param {Object}  ctx\n * @param {boolean} enableLabels\n * @param {number}  x\n * @param {number}  y\n * @param {number}  width\n * @param {number}  height\n * @param {string)  color\n * @param {number}  opacity\n * @param {string}  labelTextColor\n * @param {number}  value\n */\n\nvar renderRect = function renderRect(ctx, _ref, _ref2) {\n  var enableLabels = _ref.enableLabels;\n  var x = _ref2.x,\n      y = _ref2.y,\n      width = _ref2.width,\n      height = _ref2.height,\n      color = _ref2.color,\n      opacity = _ref2.opacity,\n      labelTextColor = _ref2.labelTextColor,\n      value = _ref2.value;\n  ctx.save();\n  ctx.globalAlpha = opacity;\n  ctx.fillStyle = color;\n  ctx.fillRect(x - width / 2, y - height / 2, width, height);\n\n  if (enableLabels === true) {\n    ctx.fillStyle = labelTextColor;\n    ctx.fillText(value, x, y);\n  }\n\n  ctx.restore();\n};\n/**\n * Render heatmap circle cell.\n *\n * @param {Object}  ctx\n * @param {boolean} enableLabels\n * @param {number}  x\n * @param {number}  y\n * @param {number}  width\n * @param {number}  height\n * @param {string)  color\n * @param {number}  opacity\n * @param {string}  labelTextColor\n * @param {number}  value\n */\n\n\nvar renderCircle = function renderCircle(ctx, _ref3, _ref4) {\n  var enableLabels = _ref3.enableLabels;\n  var x = _ref4.x,\n      y = _ref4.y,\n      width = _ref4.width,\n      height = _ref4.height,\n      color = _ref4.color,\n      opacity = _ref4.opacity,\n      labelTextColor = _ref4.labelTextColor,\n      value = _ref4.value;\n  ctx.save();\n  ctx.globalAlpha = opacity;\n  var radius = Math.min(width, height) / 2;\n  ctx.fillStyle = color;\n  ctx.beginPath();\n  ctx.arc(x, y, radius, 0, 2 * Math.PI);\n  ctx.fill();\n\n  if (enableLabels === true) {\n    ctx.fillStyle = labelTextColor;\n    ctx.fillText(value, x, y);\n  }\n\n  ctx.restore();\n};\n\nvar HeatMapCanvas = function (_Component) {\n  inherits(HeatMapCanvas, _Component);\n\n  function HeatMapCanvas() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, HeatMapCanvas);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleMouseHover = function (showTooltip, hideTooltip, event) {\n      if (!_this.nodes) return;\n\n      var _getRelativeCursor = core.getRelativeCursor(_this.surface, event),\n          x = _getRelativeCursor[0],\n          y = _getRelativeCursor[1];\n\n      var _this$props = _this.props,\n          margin = _this$props.margin,\n          offsetX = _this$props.offsetX,\n          offsetY = _this$props.offsetY,\n          theme = _this$props.theme,\n          setCurrentNode = _this$props.setCurrentNode,\n          tooltip = _this$props.tooltip;\n\n      var node = _this.nodes.find(function (node) {\n        return core.isCursorInRect(node.x + margin.left + offsetX - node.width / 2, node.y + margin.top + offsetY - node.height / 2, node.width, node.height, x, y);\n      });\n\n      if (node !== undefined) {\n        setCurrentNode(node);\n        showTooltip(React__default.createElement(HeatMapCellTooltip$1, {\n          node: node,\n          theme: theme,\n          tooltip: tooltip\n        }), event);\n      } else {\n        setCurrentNode(null);\n        hideTooltip();\n      }\n    }, _this.handleMouseLeave = function (hideTooltip) {\n      _this.props.setCurrentNode(null);\n\n      hideTooltip();\n    }, _this.handleClick = function (event) {\n      if (!_this.props.currentNode) return;\n\n      _this.props.onClick(_this.props.currentNode, event);\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  HeatMapCanvas.prototype.componentDidMount = function componentDidMount() {\n    this.ctx = this.surface.getContext('2d');\n    this.draw(this.props);\n  };\n\n  HeatMapCanvas.prototype.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (this.props.outerWidth !== props.outerWidth || this.props.outerHeight !== props.outerHeight || this.props.isInteractive !== props.isInteractive || this.props.theme !== props.theme) {\n      return true;\n    } else {\n      this.draw(props);\n      return false;\n    }\n  };\n\n  HeatMapCanvas.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.ctx = this.surface.getContext('2d');\n    this.draw(this.props);\n  };\n\n  HeatMapCanvas.prototype.draw = function draw(props) {\n    var width = props.width,\n        height = props.height,\n        outerWidth = props.outerWidth,\n        outerHeight = props.outerHeight,\n        pixelRatio = props.pixelRatio,\n        margin = props.margin,\n        offsetX = props.offsetX,\n        offsetY = props.offsetY,\n        xScale = props.xScale,\n        yScale = props.yScale,\n        axisTop = props.axisTop,\n        axisRight = props.axisRight,\n        axisBottom = props.axisBottom,\n        axisLeft = props.axisLeft,\n        cellShape = props.cellShape,\n        enableLabels = props.enableLabels,\n        theme = props.theme;\n    this.surface.width = outerWidth * pixelRatio;\n    this.surface.height = outerHeight * pixelRatio;\n    this.ctx.scale(pixelRatio, pixelRatio);\n    var renderNode = void 0;\n\n    if (cellShape === 'rect') {\n      renderNode = partial(renderRect, this.ctx, {\n        enableLabels: enableLabels\n      });\n    } else {\n      renderNode = partial(renderCircle, this.ctx, {\n        enableLabels: enableLabels\n      });\n    }\n\n    var nodes = computeNodes(props);\n    this.ctx.fillStyle = theme.background;\n    this.ctx.fillRect(0, 0, outerWidth, outerHeight);\n    this.ctx.translate(margin.left + offsetX, margin.top + offsetY);\n    axes.renderAxesToCanvas(this.ctx, {\n      xScale: xScale,\n      yScale: yScale,\n      width: width - offsetX * 2,\n      height: height - offsetY * 2,\n      top: axisTop,\n      right: axisRight,\n      bottom: axisBottom,\n      left: axisLeft,\n      theme: theme\n    });\n    this.ctx.textAlign = 'center';\n    this.ctx.textBaseline = 'middle';\n    nodes.forEach(renderNode);\n    this.nodes = nodes;\n  };\n\n  HeatMapCanvas.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        outerWidth = _props.outerWidth,\n        outerHeight = _props.outerHeight,\n        pixelRatio = _props.pixelRatio,\n        isInteractive = _props.isInteractive,\n        theme = _props.theme;\n    return React__default.createElement(core.Container, {\n      isInteractive: isInteractive,\n      theme: theme\n    }, function (_ref) {\n      var showTooltip = _ref.showTooltip,\n          hideTooltip = _ref.hideTooltip;\n      return React__default.createElement('canvas', {\n        ref: function ref(surface) {\n          _this2.surface = surface;\n        },\n        width: outerWidth * pixelRatio,\n        height: outerHeight * pixelRatio,\n        style: {\n          width: outerWidth,\n          height: outerHeight\n        },\n        onMouseEnter: partial(_this2.handleMouseHover, showTooltip, hideTooltip),\n        onMouseMove: partial(_this2.handleMouseHover, showTooltip, hideTooltip),\n        onMouseLeave: partial(_this2.handleMouseLeave, hideTooltip),\n        onClick: _this2.handleClick\n      });\n    });\n  };\n\n  return HeatMapCanvas;\n}(React.Component);\n\nHeatMapCanvas.propTypes = HeatMapPropTypes;\nvar HeatMapCanvas$1 = enhance(HeatMapCanvas);\n\nvar ResponsiveHeatMap = function ResponsiveHeatMap(props) {\n  return React__default.createElement(core.ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React__default.createElement(HeatMap$1, _extends({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nvar ResponsiveHeatMapCanvas = function ResponsiveHeatMapCanvas(props) {\n  return React__default.createElement(core.ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React__default.createElement(HeatMapCanvas$1, _extends({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexports.HeatMap = HeatMap$1;\nexports.HeatMapCanvas = HeatMapCanvas$1;\nexports.ResponsiveHeatMap = ResponsiveHeatMap;\nexports.ResponsiveHeatMapCanvas = ResponsiveHeatMapCanvas;\nexports.HeatMapPropTypes = HeatMapPropTypes;\nexports.HeatMapDefaultProps = HeatMapDefaultProps;","var baseExtremum = require('./_baseExtremum'),\n    baseLt = require('./_baseLt'),\n    identity = require('./identity');\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\n\n\nfunction min(array) {\n  return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;\n}\n\nmodule.exports = min;","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\n\n\nfunction max(array) {\n  return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;\n}\n\nmodule.exports = max;","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;","var baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n/** Used to compose bitmasks for function metadata. */\n\n\nvar WRAP_PARTIAL_FLAG = 32;\n/**\n * Creates a function that invokes `func` with `partials` prepended to the\n * arguments it receives. This method is like `_.bind` except it does **not**\n * alter the `this` binding.\n *\n * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 0.2.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var sayHelloTo = _.partial(greet, 'hello');\n * sayHelloTo('fred');\n * // => 'hello fred'\n *\n * // Partially applied with placeholders.\n * var greetFred = _.partial(greet, _, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n */\n\nvar partial = baseRest(function (func, partials) {\n  var holders = replaceHolders(partials, getHolder(partial));\n  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n}); // Assign default placeholders.\n\npartial.placeholder = {};\nmodule.exports = partial;"],"sourceRoot":""}