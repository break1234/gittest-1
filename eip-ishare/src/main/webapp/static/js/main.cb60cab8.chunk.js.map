{"version":3,"sources":["constant/route.js","constant/index.js","stores/login-store.js","stores/account-store.js","components/login-form/index.js","components/navigation/index.js","App.js","serviceWorker.js","index.js"],"names":["NAV_ROUTE","HOME","STATICS","HISTORY","LOGIN","REGISTER","USER_PROFILE","__webpack_require__","d","__webpack_exports__","HOUR","LINE_PROPS","xScale","type","format","precision","min","max","yScale","stacked","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","margin","top","right","bottom","left","colors","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","dotSize","dotColor","dotBorderColor","dotBorderWidth","configure","enforceActions","login_store","observable","action","visible","_this","displayLoginPopup","value","field","phoneNumber","_this2","password","status","_this3","isLogin","_this4","shouldRedirect","_callee","res","regenerator_default","a","wrap","_context","prev","next","fetch","method","url","headers","content-type","sent","t0","runInAction","console","log","data","success","_this5","accountStore","updateAccount","user","error","message","stop","this","_callee2","_context2","_this6","_callee3","_context3","_this7","_callee4","_context4","_this8","account_store","account","hasGetInfo","loginStore","updateLogin","updateData","member","Item","options","onFieldsChange","changeValue","LoginForm","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","e","preventDefault","handleLogin","onSubmit","getFieldDecorator","form","react_default","createElement","es_form","className","rules","required","input","placeholder","prefix","icon","color","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","Link","to","Component","components_login_form","create","NAV_MENU","title","key","path","Navigation","observer","handleClickLogin","handleCancelPopup","handleLogout","stopPropagation","history","push","toggleLoginPopup","navLogoClass","classnames","activeKey","location","pathname","slice","src","alt","map","menu","menuClass","active","onClick","popover","placement","content","avatar","size","headimgurl","username","modal","onCancel","centered","footer","withRouter","HomePage","lazy","Promise","all","then","StaticsPage","HistoryPage","App","BrowserRouter","Route","render","_ref","exact","Redirect","components_navigation","react","fallback","Switch","component","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb60cab8.chunk.js","sourcesContent":["const NAV_ROUTE = {\n  HOME: '/home',\n  STATICS: '/statics',\n  HISTORY: '/history',\n  LOGIN: '/login',\n  REGISTER: '/register',\n  USER_PROFILE: '/profile',\n};\n\nexport {\n  NAV_ROUTE,\n};\n","import { NAV_ROUTE } from './route';\n\nconst SECOND = 1000;\nconst MINUTE = 60 * SECOND;\nconst HOUR = 60 * MINUTE;\nconst DAY = 24 * HOUR;\nconst WEEK = 7 * DAY;\n\nconst LINE_PROPS = {\n  xScale: {\n    type: 'time',\n    format: '%Y-%m-%dT%I:%M',\n    precision: 'minute',\n    min: 'auto',\n    max: 'auto',\n  },\n  yScale: {\n    type: 'linear',\n    stacked: false,\n    min: 'auto',\n    max: 'auto',\n  },\n  axisBottom: {\n    format: '%I:%M',\n    orient: 'bottom',\n    tickSize: 3,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'Time',\n    legendOffset: 36,\n    legendPosition: 'middle',\n  },\n  axisLeft: {\n    orient: 'left',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legendOffset: -40,\n    legendPosition: 'middle',\n  },\n  margin: {\n    top: 20,\n    right: 100,\n    bottom: 120,\n    left: 60,\n  },\n  colors: 'category10',\n  legends: [\n    {\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 10,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [\n        {\n          on: 'hover',\n          style: {\n            itemBackground: 'rgba(0, 0, 0, .03)',\n            itemOpacity: 1,\n          },\n        },\n      ],\n\n    },\n  ],\n  dotSize: 10,\n  dotColor: 'inherit:darker(0.3)',\n  dotBorderColor: '#fff',\n  dotBorderWidth: 2,\n};\n\nexport {\n  SECOND,\n  MINUTE,\n  HOUR,\n  DAY,\n  WEEK,\n  NAV_ROUTE,\n  LINE_PROPS,\n};\n","import {\n  observable, action, configure, runInAction,\n} from 'mobx';\nimport fetch from 'axios';\nimport accountStore from './account-store';\n\nconfigure({ enforceActions: 'always' });\n\nclass LoginStore {\n  @observable phoneNumber = '';\n\n  @observable password = '';\n\n  @observable validateCode = '';\n\n  @observable shouldRedirect = false;\n\n  @observable isLogin = false;\n\n  @observable displayLoginPopup = false;\n\n  @action toggleLoginPopup = (visible) => {\n    this.displayLoginPopup = visible;\n  }\n\n  @action changeValue = (value, field) => {\n    if (field.phoneNumber) {\n      this.phoneNumber = field.phoneNumber.value;\n    } else if (field.password) {\n      this.password = field.password.value;\n    }\n  }\n\n  @action updateLogin = (status) => {\n    this.isLogin = status;\n  }\n\n  @action updateRedirect = (status) => {\n    this.shouldRedirect = status;\n  }\n\n  @action handleAuthLogin = async () => {\n    let res = {};\n    try {\n      res = await fetch({\n        method: 'GET',\n        url: '/wechat/login',\n        headers: {\n          'content-type': 'application/json',\n        },\n      });\n    } catch (e) {\n      res = e;\n    }\n    runInAction(() => {\n      console.log(res);\n      if (res.status !== 200 || !res.data.success) {\n        console.error(res.message);\n      } else {\n        this.shouldRedirect = true;\n        this.isLogin = true;\n        accountStore.updateAccount(res.data.data.user);\n      }\n    });\n  }\n\n  @action handleLogin = async () => {\n    let res = {};\n    try {\n      res = await fetch({\n        method: 'POST',\n        url: '/api/login',\n        headers: {\n          'content-type': 'application/json',\n        },\n        data: {\n          phoneNumber: this.phoneNumber,\n          password: this.password,\n        },\n      });\n    } catch (e) {\n      res = e;\n    }\n    runInAction(() => {\n      console.log(res);\n      if (res.status !== 200 || !res.data.success) {\n        console.error(res.message);\n      } else {\n        this.shouldRedirect = true;\n        this.isLogin = true;\n        accountStore.updateAccount(res.data.data.user);\n      }\n    });\n  }\n\n  @action handleLogout = async () => {\n    let res = {};\n    try {\n      res = await fetch({\n        method: 'GET',\n        url: '/api/logout',\n        headers: {\n          'content-type': 'application/json',\n        },\n      });\n    } catch (e) {\n      res = e;\n    }\n\n    runInAction(() => {\n      if (res.status !== 200 || !res.data.success) {\n        console.error(res.message);\n      } else {\n        this.shouldRedirect = false;\n        this.isLogin = false;\n        accountStore.updateAccount({});\n      }\n    });\n  }\n\n  @action handleSignUp = async () => {\n    let res = {};\n    try {\n      res = await fetch({\n        method: 'POST',\n        url: '/api/signup',\n        headers: {\n          'content-type': 'application/json',\n        },\n        data: {\n          phoneNumber: this.phoneNumber,\n          password: this.password,\n        },\n      });\n    } catch (e) {\n      res = e;\n    }\n    runInAction(() => {\n      if (res.status !== 200 || !res.data.success) {\n        console.error(res.message);\n      } else {\n        this.shouldRedirect = true;\n        this.isLogin = true;\n        accountStore.updateAccount(res.data.data.user);\n      }\n    });\n  }\n}\n\nexport default new LoginStore();\n","import {\n  observable, action, configure, runInAction,\n} from 'mobx';\nimport fetch from 'axios';\nimport loginStore from './login-store';\n\nconfigure({ enforceActions: 'always' });\n\n\nclass AccoutStore {\n  @observable account = {};\n\n  @observable hasGetInfo = false;\n\n  @action updateAccount = (account) => {\n    this.account = account;\n  }\n\n  @action getUserInfo = async () => {\n    let res = {};\n    try {\n      res = await fetch({\n        method: 'GET',\n        url: '/api/userinfo',\n        headers: {\n          'content-type': 'application/json',\n        },\n      });\n    } catch (e) {\n      res = e;\n    }\n    runInAction(() => {\n      this.hasGetInfo = true;\n      if (res.status !== 200 || !res.data.success) {\n        loginStore.updateLogin(false);\n      } else if (res.data.success) {\n        loginStore.updateLogin(true);\n        this.account = res.data.data;\n      }\n    });\n  }\n\n  @action updateMemberInfo = async (updateData) => {\n    const data = await fetch({\n      method: 'PUT',\n      url: '/api/user',\n      headers: {\n        'content-type': 'application/json',\n      },\n      data: updateData,\n    });\n    runInAction(() => {\n      this.member = data;\n    });\n  }\n}\n\nexport default new AccoutStore();\n","import React, { Component } from 'react';\nimport {\n  Form, Icon, Input, Button, Checkbox,\n} from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport './index.css';\nimport loginStore from '../../stores/login-store';\nimport { NAV_ROUTE } from '../../constant';\n\nconst { Item } = Form;\n\nconst options = {\n  onFieldsChange: loginStore.changeValue,\n};\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    loginStore.handleLogin();\n    const { onSubmit } = this.props;\n    if (onSubmit) {\n      onSubmit();\n    }\n  }\n\n  render() {\n    const { form } = this.props;\n    const { getFieldDecorator } = form;\n\n    return (\n      <Form className=\"login-form\" onSubmit={this.handleSubmit}>\n        <Item>\n          {getFieldDecorator('phoneNumber', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              placeholder=\"Phone Number/Email\"\n              prefix={<Icon style={{ color: 'rgba(0,0,0,.25)' }} type=\"user\" />}\n              type=\"text\"\n            />,\n          )}\n        </Item>\n        <Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              placeholder=\"Password\"\n              prefix={<Icon style={{ color: 'rgba(0,0,0,.25)' }} type=\"lock\" />}\n              type=\"password\"\n            />,\n          )}\n        </Item>\n        <Item>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true,\n          })(\n            <Checkbox>\n              {'Remember'}\n            </Checkbox>,\n          )}\n          <a className=\"login-form---forgot\" href=\"\">\n            {'Forgot password'}\n          </a>\n          <Button className=\"login-form--button\" htmlType=\"submit\" type=\"primary\">\n            {'Log in'}\n          </Button>\n          {'or   '}\n          <Link to={NAV_ROUTE.REGISTER}>\n            {'register now!'}\n          </Link>\n        </Item>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create(options)(LoginForm);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  Avatar, Modal, Popover, Button,\n} from 'antd';\n\nimport { observer } from 'mobx-react';\nimport classnames from 'classnames';\n\nimport accountStore from '../../stores/account-store';\nimport loginStore from '../../stores/login-store';\nimport { NAV_ROUTE } from '../../constant';\nimport LoginForm from '../login-form';\nimport './index.css';\n\nconst NAV_MENU = [\n  {\n    title: 'Home',\n    key: 'home',\n    path: NAV_ROUTE.HOME\n  },\n  {\n    title: 'Statics',\n    key: 'statics',\n    path: NAV_ROUTE.STATICS,\n  },\n  {\n    title: 'History',\n    key: 'history',\n    path: NAV_ROUTE.HISTORY,\n  }\n]\n\n@observer\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClickLogin = this.handleClickLogin.bind(this);\n    this.handleCancelPopup = this.handleCancelPopup.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout(e) {\n    e.stopPropagation();\n    const { history } = this.props;\n    loginStore.handleLogout();\n    history.push(NAV_ROUTE.LOGIN);\n  }\n\n  handleCancelPopup() {\n    loginStore.toggleLoginPopup(false);\n  }\n\n  handleClickLogin(e) {\n    e.stopPropagation();\n    const { history } = this.props;\n    if (loginStore.isLogin) {\n      history.push(NAV_ROUTE.USER_PROFILE);\n    } else {\n      loginStore.toggleLoginPopup(true);\n    }\n  }\n\n  render() {\n    const navLogoClass = classnames('navigation__logo');\n\n    const { location } = this.props;\n    const activeKey = location.pathname.slice(1);\n\n    return (\n      <div className=\"comp__navigation navigation\">\n        <Link to=\"/\" className={navLogoClass}>\n          <img className=\"logo\" src=\"\" alt=\"\" />\n          LOGO GO\n        </Link>\n        <div className=\"navigation__right-content\">\n          <div className=\"navigation__menu\">\n            {\n              NAV_MENU.map((menu) => {\n                const menuClass = classnames('menu__item', {\n                  'active': activeKey === menu.key\n                });\n                return (\n                  <Link\n                    className={menuClass}\n                    to={menu.path}\n                  >\n                    {\n                      menu.title\n                    }\n                  </Link>\n                )\n              })\n            }\n          </div>\n          <div\n            className=\"navigation__login\"\n            onClick={this.handleClickLogin}\n          >\n            <Popover\n              placement=\"bottomRight\"\n              content={\n                loginStore.isLogin ? (<Button onClick={this.handleLogout}>Logout</Button>) : 'Login'\n              }\n            >\n              <Avatar\n                size=\"large\"\n                src={accountStore.account.headimgurl}\n              >\n                { loginStore.isLogin ? accountStore.account.username : 'Login'}\n              </Avatar>\n            </Popover>\n          </div>\n        </div>\n        <Modal\n          visible={loginStore.displayLoginPopup}\n          onCancel={this.handleCancelPopup}\n          title=\"Login\"\n          centered\n          footer={null}\n        >\n          <LoginForm\n            onSubmit={this.handleCancelPopup}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Navigation);\n","import React, { Component, Suspense, lazy } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport { NAV_ROUTE } from './constant';\nimport Navigation from './components/navigation';\n\nconst HomePage = lazy(() => import('./pages/home'));\nconst StaticsPage = lazy(() => import('./pages/statics'));\nconst HistoryPage = lazy(() => import('./pages/history'));\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route\n          render={({ location }) => (\n            <div className=\"App\">\n              <Route\n                exact\n                path=\"/\"\n                render={() => <Redirect to=\"/home\" />}\n              />\n              <Navigation />\n              <Suspense fallback={<div>Loading...</div>}>\n                <Switch location={location}>\n                  <Route component={HomePage} path={NAV_ROUTE.HOME} />\n                  <Route component={StaticsPage} path={NAV_ROUTE.STATICS} />\n                  <Route component={HistoryPage} path={NAV_ROUTE.HISTORY} />\n                </Switch>\n              </Suspense>\n\n            </div>\n          )}\n        />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}